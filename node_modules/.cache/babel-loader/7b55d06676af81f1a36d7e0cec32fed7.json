{"ast":null,"code":"var _jsxFileName = \"/Users/shehrozkapoor/Desktop/google-oauth-django-react/client/src/App.js\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\"; // get env vars\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst drfClientId = process.env.REACT_APP_DRF_CLIENT_ID;\nconst drfClientSecret = process.env.REACT_APP_DRF_CLIENT_SECRET;\nconst baseURL = \"http://localhost:8000\";\n\nconst handleGoogleLogin = response => {\n  console.log(\"response\", response);\n  axios.post(`${baseURL}/auth/convert-token`, {\n    token: response.accessToken,\n    backend: \"google-oauth2\",\n    grant_type: \"convert_token\",\n    client_id: drfClientId,\n    client_secret: drfClientSecret\n  }).then(res => {\n    const {\n      access_token,\n      refresh_token\n    } = res.data;\n    console.log({\n      access_token,\n      refresh_token\n    });\n    localStorage.setItem(\"access_token\", access_token);\n    localStorage.setItem(\"refresh_token\", refresh_token);\n  }).catch(err => {\n    console.log(\"Error Google login\", err);\n  });\n};\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: googleClientId,\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: response => handleGoogleLogin(response),\n      render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        type: \"button\",\n        class: \"login-with-google-btn\",\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this),\n      onFailure: err => console.log(\"Google Login failed\", err)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shehrozkapoor/Desktop/google-oauth-django-react/client/src/App.js"],"names":["GoogleLogin","axios","googleClientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","drfClientId","REACT_APP_DRF_CLIENT_ID","drfClientSecret","REACT_APP_DRF_CLIENT_SECRET","baseURL","handleGoogleLogin","response","console","log","post","token","accessToken","backend","grant_type","client_id","client_secret","then","res","access_token","refresh_token","data","localStorage","setItem","catch","err","App","renderProps","onClick","disabled"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAnC;AACA,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYG,uBAAhC;AACA,MAAMC,eAAe,GAAGL,OAAO,CAACC,GAAR,CAAYK,2BAApC;AACA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AAEtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB;AACAX,EAAAA,KAAK,CACFc,IADH,CACS,GAAEL,OAAQ,qBADnB,EACyC;AACrCM,IAAAA,KAAK,EAAEJ,QAAQ,CAACK,WADqB;AAErCC,IAAAA,OAAO,EAAE,eAF4B;AAGrCC,IAAAA,UAAU,EAAE,eAHyB;AAIrCC,IAAAA,SAAS,EAAEd,WAJ0B;AAKrCe,IAAAA,aAAa,EAAEb;AALsB,GADzC,EAQGc,IARH,CAQSC,GAAD,IAAS;AACb,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAkCF,GAAG,CAACG,IAA5C;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEU,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAZ;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,YAArC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCH,aAAtC;AACD,GAbH,EAcGI,KAdH,CAcUC,GAAD,IAAS;AACdjB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCgB,GAAlC;AACD,GAhBH;AAiBD,CApBD;;AAsBA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAE7B,cADZ;AAEE,MAAA,UAAU,EAAC,mBAFb;AAGE,MAAA,SAAS,EAAGU,QAAD,IAAcD,iBAAiB,CAACC,QAAD,CAH5C;AAIE,MAAA,MAAM,EAAGoB,WAAD,iBACN;AACE,QAAA,OAAO,EAAEA,WAAW,CAACC,OADvB;AAEE,QAAA,QAAQ,EAAED,WAAW,CAACE,QAFxB;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAC,uBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAcE,MAAA,SAAS,EAAGJ,GAAD,IAASjB,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCgB,GAAnC;AAdtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBD;;KAAMC,G;AAuBN,eAAeA,GAAf","sourcesContent":["import GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\n// get env vars\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst drfClientId = process.env.REACT_APP_DRF_CLIENT_ID;\nconst drfClientSecret = process.env.REACT_APP_DRF_CLIENT_SECRET;\nconst baseURL = \"http://localhost:8000\";\n\nconst handleGoogleLogin = (response) => {\n\n  console.log(\"response\",response)\n  axios\n    .post(`${baseURL}/auth/convert-token`, {\n      token: response.accessToken,\n      backend: \"google-oauth2\",\n      grant_type: \"convert_token\",\n      client_id: drfClientId,\n      client_secret: drfClientSecret,\n    })\n    .then((res) => {\n      const { access_token, refresh_token } = res.data;\n      console.log({ access_token, refresh_token });\n      localStorage.setItem(\"access_token\", access_token);\n      localStorage.setItem(\"refresh_token\", refresh_token);\n    })\n    .catch((err) => {\n      console.log(\"Error Google login\", err);\n    });\n};\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <GoogleLogin\n        clientId={googleClientId}\n        buttonText=\"LOGIN WITH GOOGLE\"\n        onSuccess={(response) => handleGoogleLogin(response)}\n        render={(renderProps) => (\n          <button\n            onClick={renderProps.onClick}\n            disabled={renderProps.disabled}\n            type=\"button\"\n            class=\"login-with-google-btn\"\n          >\n            Sign in with Google\n          </button>\n        )}\n        onFailure={(err) => console.log(\"Google Login failed\", err)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}